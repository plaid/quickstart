/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.31.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PayPeriodDetails Details about the pay period.
type PayPeriodDetails struct {
	// The pay period start date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: \"yyyy-mm-dd\".
	StartDate NullableString `json:"start_date"`
	// The pay period end date, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format: \"yyyy-mm-dd\".
	EndDate NullableString `json:"end_date"`
	// The date on which the paystub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
	PayDay NullableString `json:"pay_day"`
	// Total earnings before tax.
	GrossEarnings NullableFloat32 `json:"gross_earnings"`
	// The net amount of the paycheck.
	CheckAmount NullableFloat32 `json:"check_amount"`
	AdditionalProperties map[string]interface{}
}

type _PayPeriodDetails PayPeriodDetails

// NewPayPeriodDetails instantiates a new PayPeriodDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayPeriodDetails(startDate NullableString, endDate NullableString, payDay NullableString, grossEarnings NullableFloat32, checkAmount NullableFloat32) *PayPeriodDetails {
	this := PayPeriodDetails{}
	this.StartDate = startDate
	this.EndDate = endDate
	this.PayDay = payDay
	this.GrossEarnings = grossEarnings
	this.CheckAmount = checkAmount
	return &this
}

// NewPayPeriodDetailsWithDefaults instantiates a new PayPeriodDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayPeriodDetailsWithDefaults() *PayPeriodDetails {
	this := PayPeriodDetails{}
	return &this
}

// GetStartDate returns the StartDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PayPeriodDetails) GetStartDate() string {
	if o == nil || o.StartDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayPeriodDetails) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// SetStartDate sets field value
func (o *PayPeriodDetails) SetStartDate(v string) {
	o.StartDate.Set(&v)
}

// GetEndDate returns the EndDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PayPeriodDetails) GetEndDate() string {
	if o == nil || o.EndDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayPeriodDetails) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// SetEndDate sets field value
func (o *PayPeriodDetails) SetEndDate(v string) {
	o.EndDate.Set(&v)
}

// GetPayDay returns the PayDay field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PayPeriodDetails) GetPayDay() string {
	if o == nil || o.PayDay.Get() == nil {
		var ret string
		return ret
	}

	return *o.PayDay.Get()
}

// GetPayDayOk returns a tuple with the PayDay field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayPeriodDetails) GetPayDayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PayDay.Get(), o.PayDay.IsSet()
}

// SetPayDay sets field value
func (o *PayPeriodDetails) SetPayDay(v string) {
	o.PayDay.Set(&v)
}

// GetGrossEarnings returns the GrossEarnings field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *PayPeriodDetails) GetGrossEarnings() float32 {
	if o == nil || o.GrossEarnings.Get() == nil {
		var ret float32
		return ret
	}

	return *o.GrossEarnings.Get()
}

// GetGrossEarningsOk returns a tuple with the GrossEarnings field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayPeriodDetails) GetGrossEarningsOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GrossEarnings.Get(), o.GrossEarnings.IsSet()
}

// SetGrossEarnings sets field value
func (o *PayPeriodDetails) SetGrossEarnings(v float32) {
	o.GrossEarnings.Set(&v)
}

// GetCheckAmount returns the CheckAmount field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *PayPeriodDetails) GetCheckAmount() float32 {
	if o == nil || o.CheckAmount.Get() == nil {
		var ret float32
		return ret
	}

	return *o.CheckAmount.Get()
}

// GetCheckAmountOk returns a tuple with the CheckAmount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayPeriodDetails) GetCheckAmountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CheckAmount.Get(), o.CheckAmount.IsSet()
}

// SetCheckAmount sets field value
func (o *PayPeriodDetails) SetCheckAmount(v float32) {
	o.CheckAmount.Set(&v)
}

func (o PayPeriodDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["start_date"] = o.StartDate.Get()
	}
	if true {
		toSerialize["end_date"] = o.EndDate.Get()
	}
	if true {
		toSerialize["pay_day"] = o.PayDay.Get()
	}
	if true {
		toSerialize["gross_earnings"] = o.GrossEarnings.Get()
	}
	if true {
		toSerialize["check_amount"] = o.CheckAmount.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PayPeriodDetails) UnmarshalJSON(bytes []byte) (err error) {
	varPayPeriodDetails := _PayPeriodDetails{}

	if err = json.Unmarshal(bytes, &varPayPeriodDetails); err == nil {
		*o = PayPeriodDetails(varPayPeriodDetails)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "start_date")
		delete(additionalProperties, "end_date")
		delete(additionalProperties, "pay_day")
		delete(additionalProperties, "gross_earnings")
		delete(additionalProperties, "check_amount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePayPeriodDetails struct {
	value *PayPeriodDetails
	isSet bool
}

func (v NullablePayPeriodDetails) Get() *PayPeriodDetails {
	return v.value
}

func (v *NullablePayPeriodDetails) Set(val *PayPeriodDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePayPeriodDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePayPeriodDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayPeriodDetails(val *PayPeriodDetails) *NullablePayPeriodDetails {
	return &NullablePayPeriodDetails{value: val, isSet: true}
}

func (v NullablePayPeriodDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayPeriodDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


