/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.31.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// IncomeVerificationPrecheckEmployer struct for IncomeVerificationPrecheckEmployer
type IncomeVerificationPrecheckEmployer struct {
	// The employer's name
	Name *string `json:"name,omitempty"`
	// The employer's tax id
	TaxId *string `json:"tax_id,omitempty"`
}

// NewIncomeVerificationPrecheckEmployer instantiates a new IncomeVerificationPrecheckEmployer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncomeVerificationPrecheckEmployer() *IncomeVerificationPrecheckEmployer {
	this := IncomeVerificationPrecheckEmployer{}
	return &this
}

// NewIncomeVerificationPrecheckEmployerWithDefaults instantiates a new IncomeVerificationPrecheckEmployer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncomeVerificationPrecheckEmployerWithDefaults() *IncomeVerificationPrecheckEmployer {
	this := IncomeVerificationPrecheckEmployer{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IncomeVerificationPrecheckEmployer) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomeVerificationPrecheckEmployer) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IncomeVerificationPrecheckEmployer) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IncomeVerificationPrecheckEmployer) SetName(v string) {
	o.Name = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *IncomeVerificationPrecheckEmployer) GetTaxId() string {
	if o == nil || o.TaxId == nil {
		var ret string
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomeVerificationPrecheckEmployer) GetTaxIdOk() (*string, bool) {
	if o == nil || o.TaxId == nil {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *IncomeVerificationPrecheckEmployer) HasTaxId() bool {
	if o != nil && o.TaxId != nil {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given string and assigns it to the TaxId field.
func (o *IncomeVerificationPrecheckEmployer) SetTaxId(v string) {
	o.TaxId = &v
}

func (o IncomeVerificationPrecheckEmployer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TaxId != nil {
		toSerialize["tax_id"] = o.TaxId
	}
	return json.Marshal(toSerialize)
}

type NullableIncomeVerificationPrecheckEmployer struct {
	value *IncomeVerificationPrecheckEmployer
	isSet bool
}

func (v NullableIncomeVerificationPrecheckEmployer) Get() *IncomeVerificationPrecheckEmployer {
	return v.value
}

func (v *NullableIncomeVerificationPrecheckEmployer) Set(val *IncomeVerificationPrecheckEmployer) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomeVerificationPrecheckEmployer) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomeVerificationPrecheckEmployer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomeVerificationPrecheckEmployer(val *IncomeVerificationPrecheckEmployer) *NullableIncomeVerificationPrecheckEmployer {
	return &NullableIncomeVerificationPrecheckEmployer{value: val, isSet: true}
}

func (v NullableIncomeVerificationPrecheckEmployer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomeVerificationPrecheckEmployer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


