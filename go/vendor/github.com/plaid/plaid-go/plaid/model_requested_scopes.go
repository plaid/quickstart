/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.31.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// RequestedScopes Scope of required and optional account features or content from a ConnectedApplication.
type RequestedScopes struct {
	RequiredProductAccess ProductAccess `json:"required_product_access"`
	OptionalProductAccess ProductAccess `json:"optional_product_access"`
	AccountFilters *AccountFilter `json:"account_filters,omitempty"`
	AccountSelectionCardinality AccountSelectionCardinality `json:"account_selection_cardinality"`
}

// NewRequestedScopes instantiates a new RequestedScopes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestedScopes(requiredProductAccess ProductAccess, optionalProductAccess ProductAccess, accountSelectionCardinality AccountSelectionCardinality) *RequestedScopes {
	this := RequestedScopes{}
	this.RequiredProductAccess = requiredProductAccess
	this.OptionalProductAccess = optionalProductAccess
	this.AccountSelectionCardinality = accountSelectionCardinality
	return &this
}

// NewRequestedScopesWithDefaults instantiates a new RequestedScopes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestedScopesWithDefaults() *RequestedScopes {
	this := RequestedScopes{}
	return &this
}

// GetRequiredProductAccess returns the RequiredProductAccess field value
func (o *RequestedScopes) GetRequiredProductAccess() ProductAccess {
	if o == nil {
		var ret ProductAccess
		return ret
	}

	return o.RequiredProductAccess
}

// GetRequiredProductAccessOk returns a tuple with the RequiredProductAccess field value
// and a boolean to check if the value has been set.
func (o *RequestedScopes) GetRequiredProductAccessOk() (*ProductAccess, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequiredProductAccess, true
}

// SetRequiredProductAccess sets field value
func (o *RequestedScopes) SetRequiredProductAccess(v ProductAccess) {
	o.RequiredProductAccess = v
}

// GetOptionalProductAccess returns the OptionalProductAccess field value
func (o *RequestedScopes) GetOptionalProductAccess() ProductAccess {
	if o == nil {
		var ret ProductAccess
		return ret
	}

	return o.OptionalProductAccess
}

// GetOptionalProductAccessOk returns a tuple with the OptionalProductAccess field value
// and a boolean to check if the value has been set.
func (o *RequestedScopes) GetOptionalProductAccessOk() (*ProductAccess, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OptionalProductAccess, true
}

// SetOptionalProductAccess sets field value
func (o *RequestedScopes) SetOptionalProductAccess(v ProductAccess) {
	o.OptionalProductAccess = v
}

// GetAccountFilters returns the AccountFilters field value if set, zero value otherwise.
func (o *RequestedScopes) GetAccountFilters() AccountFilter {
	if o == nil || o.AccountFilters == nil {
		var ret AccountFilter
		return ret
	}
	return *o.AccountFilters
}

// GetAccountFiltersOk returns a tuple with the AccountFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedScopes) GetAccountFiltersOk() (*AccountFilter, bool) {
	if o == nil || o.AccountFilters == nil {
		return nil, false
	}
	return o.AccountFilters, true
}

// HasAccountFilters returns a boolean if a field has been set.
func (o *RequestedScopes) HasAccountFilters() bool {
	if o != nil && o.AccountFilters != nil {
		return true
	}

	return false
}

// SetAccountFilters gets a reference to the given AccountFilter and assigns it to the AccountFilters field.
func (o *RequestedScopes) SetAccountFilters(v AccountFilter) {
	o.AccountFilters = &v
}

// GetAccountSelectionCardinality returns the AccountSelectionCardinality field value
func (o *RequestedScopes) GetAccountSelectionCardinality() AccountSelectionCardinality {
	if o == nil {
		var ret AccountSelectionCardinality
		return ret
	}

	return o.AccountSelectionCardinality
}

// GetAccountSelectionCardinalityOk returns a tuple with the AccountSelectionCardinality field value
// and a boolean to check if the value has been set.
func (o *RequestedScopes) GetAccountSelectionCardinalityOk() (*AccountSelectionCardinality, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountSelectionCardinality, true
}

// SetAccountSelectionCardinality sets field value
func (o *RequestedScopes) SetAccountSelectionCardinality(v AccountSelectionCardinality) {
	o.AccountSelectionCardinality = v
}

func (o RequestedScopes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["required_product_access"] = o.RequiredProductAccess
	}
	if true {
		toSerialize["optional_product_access"] = o.OptionalProductAccess
	}
	if o.AccountFilters != nil {
		toSerialize["account_filters"] = o.AccountFilters
	}
	if true {
		toSerialize["account_selection_cardinality"] = o.AccountSelectionCardinality
	}
	return json.Marshal(toSerialize)
}

type NullableRequestedScopes struct {
	value *RequestedScopes
	isSet bool
}

func (v NullableRequestedScopes) Get() *RequestedScopes {
	return v.value
}

func (v *NullableRequestedScopes) Set(val *RequestedScopes) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestedScopes) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestedScopes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestedScopes(val *RequestedScopes) *NullableRequestedScopes {
	return &NullableRequestedScopes{value: val, isSet: true}
}

func (v NullableRequestedScopes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestedScopes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


