/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.31.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// Application Metadata about the application
type Application struct {
	// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
	ApplicationId string `json:"application_id"`
	// The name of the application
	Name string `json:"name"`
	// The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
	CreatedAt string `json:"created_at"`
	// A URL that links to the application logo image.
	LogoUrl NullableString `json:"logo_url"`
	// The URL for the application's website
	ApplicationUrl NullableString `json:"application_url"`
	// A string provided by the connected app stating why they use their respective enabled products.
	ReasonForAccess NullableString `json:"reason_for_access"`
}

// NewApplication instantiates a new Application object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplication(applicationId string, name string, createdAt string, logoUrl NullableString, applicationUrl NullableString, reasonForAccess NullableString) *Application {
	this := Application{}
	this.ApplicationId = applicationId
	this.Name = name
	this.CreatedAt = createdAt
	this.LogoUrl = logoUrl
	this.ApplicationUrl = applicationUrl
	this.ReasonForAccess = reasonForAccess
	return &this
}

// NewApplicationWithDefaults instantiates a new Application object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationWithDefaults() *Application {
	this := Application{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *Application) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *Application) GetApplicationIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *Application) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetName returns the Name field value
func (o *Application) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Application) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Application) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Application) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Application) GetCreatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Application) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetLogoUrl returns the LogoUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Application) GetLogoUrl() string {
	if o == nil || o.LogoUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.LogoUrl.Get()
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Application) GetLogoUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LogoUrl.Get(), o.LogoUrl.IsSet()
}

// SetLogoUrl sets field value
func (o *Application) SetLogoUrl(v string) {
	o.LogoUrl.Set(&v)
}

// GetApplicationUrl returns the ApplicationUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Application) GetApplicationUrl() string {
	if o == nil || o.ApplicationUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.ApplicationUrl.Get()
}

// GetApplicationUrlOk returns a tuple with the ApplicationUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Application) GetApplicationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApplicationUrl.Get(), o.ApplicationUrl.IsSet()
}

// SetApplicationUrl sets field value
func (o *Application) SetApplicationUrl(v string) {
	o.ApplicationUrl.Set(&v)
}

// GetReasonForAccess returns the ReasonForAccess field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Application) GetReasonForAccess() string {
	if o == nil || o.ReasonForAccess.Get() == nil {
		var ret string
		return ret
	}

	return *o.ReasonForAccess.Get()
}

// GetReasonForAccessOk returns a tuple with the ReasonForAccess field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Application) GetReasonForAccessOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReasonForAccess.Get(), o.ReasonForAccess.IsSet()
}

// SetReasonForAccess sets field value
func (o *Application) SetReasonForAccess(v string) {
	o.ReasonForAccess.Set(&v)
}

func (o Application) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["application_id"] = o.ApplicationId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["logo_url"] = o.LogoUrl.Get()
	}
	if true {
		toSerialize["application_url"] = o.ApplicationUrl.Get()
	}
	if true {
		toSerialize["reason_for_access"] = o.ReasonForAccess.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApplication struct {
	value *Application
	isSet bool
}

func (v NullableApplication) Get() *Application {
	return v.value
}

func (v *NullableApplication) Set(val *Application) {
	v.value = val
	v.isSet = true
}

func (v NullableApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplication(val *Application) *NullableApplication {
	return &NullableApplication{value: val, isSet: true}
}

func (v NullableApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


